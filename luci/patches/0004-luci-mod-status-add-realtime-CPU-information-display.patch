From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Chuck <fanck0605@qq.com>
Date: Fri, 26 Feb 2021 13:49:15 +0800
Subject: [PATCH] luci-mod-status: add realtime CPU information display

Signed-off-by: Chuck <fanck0605@qq.com>
---
 modules/luci-base/po/zh_Hans/base.po                |  6 ++++++
 modules/luci-base/root/usr/libexec/rpcd/luci        | 13 +++++++++++++
 .../resources/view/status/include/10_system.js      | 13 +++++++++++--
 .../root/usr/share/rpcd/acl.d/luci-mod-status.json  |  2 +-
 4 files changed, 31 insertions(+), 3 deletions(-)

--- a/modules/luci-base/po/zh_Hans/base.po
+++ b/modules/luci-base/po/zh_Hans/base.po
@@ -1144,6 +1144,9 @@ msgstr "CA ËØÅ‰π¶ÔºåÂ¶ÇÊûúÁïôÁ©∫ÔºåÂàôËØ
 msgid "CLAT configuration failed"
 msgstr "CLAT ÈÖçÁΩÆÂ§±Ë¥•"
 
+msgid "CPU Status"
+msgstr "CPU Áä∂ÊÄÅ"
+
 #: modules/luci-mod-status/htdocs/luci-static/resources/view/status/processes.js:72
 msgid "CPU usage (%)"
 msgstr "CPU ‰ΩøÁî®ÁéáÔºà%Ôºâ"
--- a/modules/luci-base/root/usr/libexec/rpcd/luci
+++ b/modules/luci-base/root/usr/libexec/rpcd/luci
@@ -613,6 +613,18 @@ local methods = {
 			end
 			return { result = res }
 		end
+	},
+
+	getCPUInfo = {
+		call = function()
+			local sys = require "luci.sys"
+			local cpuinfo = {}
+
+			cpuinfo.freq = sys.exec([[awk '{ printf("%d MHz", $0 / 1000) }' /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_cur_freq]])
+			cpuinfo.temp = sys.exec([[awk '{ printf("%.1f ¬∞C", $0 / 1000) }' /sys/class/thermal/thermal_zone0/temp]])
+
+			return cpuinfo
+		end
 	}
 }
 
--- a/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
+++ b/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
@@ -13,6 +13,11 @@ var callSystemInfo = rpc.declare({
 	method: 'info'
 });
 
+var callLuciCPUInfo = rpc.declare({
+	object: 'luci',
+	method: 'getCPUInfo'
+});
+
 return baseclass.extend({
 	title: _('System'),
 
@@ -20,6 +25,7 @@ return baseclass.extend({
 		return Promise.all([
 			L.resolveDefault(callSystemBoard(), {}),
 			L.resolveDefault(callSystemInfo(), {}),
+			L.resolveDefault(callLuciCPUInfo(), {}),
 			fs.lines('/usr/lib/lua/luci/version.lua')
 		]);
 	},
@@ -27,7 +33,8 @@ return baseclass.extend({
 	render: function(data) {
 		var boardinfo   = data[0],
 		    systeminfo  = data[1],
-		    luciversion = data[2];
+		    cpuinfo     = data[2],
+		    luciversion = data[3];
 
 		luciversion = luciversion.filter(function(l) {
 			return l.match(/^\s*(luciname|luciversion)\s*=/);
@@ -55,6 +62,7 @@ return baseclass.extend({
 			_('Model'),            boardinfo.model,
 			_('Architecture'),     boardinfo.system,
 			_('Target Platform'),  (L.isObject(boardinfo.release) ? boardinfo.release.target : ''),
+			_('CPU Status'),       cpuinfo.freq && cpuinfo.temp && cpuinfo.freq + ', ' + cpuinfo.temp,
 			_('Firmware Version'), (L.isObject(boardinfo.release) ? boardinfo.release.description + ' / ' : '') + (luciversion || ''),
 			_('Kernel Version'),   boardinfo.kernel,
 			_('Local Time'),       datestr,
--- a/modules/luci-mod-status/root/usr/share/rpcd/acl.d/luci-mod-status.json
+++ b/modules/luci-mod-status/root/usr/share/rpcd/acl.d/luci-mod-status.json
@@ -3,7 +3,7 @@
 		"description": "Grant access to realtime statistics",
 		"read": {
 			"ubus": {
-				"luci": [ "getConntrackList", "getRealtimeStats" ],
+				"luci": [ "getConntrackList", "getRealtimeStats", "getCPUInfo" ],
 				"network.rrdns": [ "lookup" ]
 			}
 		}
